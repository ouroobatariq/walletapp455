{"version":3,"sources":["components/shared/nav.js","components/Welcome.js","components/dashboard/DashboardItem.js","actions/projectActions.js","actions/types.js","components/dashboard/Dashboard.js","components/dashboard/dashboardoperations/CreateWallet.js","components/shared/NoFound.js","reducers/errorReducers.js","reducers/walletReducer.js","reducers/rootReducer.js","Store.js","components/dashboard/dashboardoperations/UpdateWallet.js","components/transactions/Transaction.js","components/transactions/transactionoperations/AddTransaction.js","App.js","serviceWorker.js","index.js"],"names":["nav","className","to","type","data-toggle","data-target","id","href","Component","welcome","DashboardItem","deleteBtnClick","window","confirm","props","deleteWallets","wallet","wallets","this","name","accountNumber","description","currentBalance","onClick","connect","dispath","a","axios","delete","then","res","payload","Dashboard","state","totalBalance","nextProps","totalBal","setState","getWallets","walletsComponeent","map","key","aria-haspopup","aria-expanded","disabled","get","data","CreateWallet","changeHandler","event","fieldName","target","value","submitHandler","newWallet","priority","createWallet","history","preventDefault","errors","onSubmit","onChange","classnames","placeholder","post","push","catch","err","response","NoFound","initialState","combineReducers","action","filter","x","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","UpdateWallet","updateWallet","getWallet","match","params","put","Transaction","scope","AddTransaction","checkbox","checked","handleSubmit","newTransaction","amount","createTransaction","min","htmlFor","walletid","console","log","App","path","component","Nav","exact","Welcome","NotFound","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.154f5d46.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass nav extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Expense Manager\r\n                </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                                    Dashboard\r\n                            </Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link \" href=\"register.html\">\r\n                                    Sign Up\r\n                            </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"login.html\">\r\n                                    Login\r\n                            </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default nav\r\n","import React, { Component } from 'react'\r\n\r\nexport class welcome extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">Personal Expense Manager</h1>\r\n                            <p className=\"lead\">\r\n                                Create your account to manage your daily expense and hisab kitab\r\n                            </p>\r\n                            <hr />\r\n                            <a href=\"register.html\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                Sign Up\r\n                            </a>\r\n                            <a href=\"login.html\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                Login\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default welcome\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {deleteWallets} from '../../actions/projectActions'\r\nimport {connect} from 'react-redux'\r\n\r\nclass DashboardItem extends Component {\r\n\r\n    deleteBtnClick =() =>{\r\n        if(window.confirm(\"Are you use, you wan to delete this wallet\"))\r\n        {\r\n            this.props.deleteWallets(this.props.wallet.id)\r\n        }\r\n      \r\n    }\r\n\r\n    render() {\r\n        const wallets =this.props.wallet\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"card card-body bg-light mb-3\">\r\n                <div className=\"row\" >\r\n                    <div className=\"col-lg-4 col-md-3 col-6\">\r\n                        <h3>{wallets.name}</h3>\r\n                        <p>Account Number: {wallets.accountNumber}</p>\r\n                        <p>{wallets.description}</p>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-3 col-6 text-center\">\r\n                        <h3>Balance</h3>\r\n                        <h1>Rs. {wallets.currentBalance}</h1>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-12 d-lg-block\">\r\n                        <ul className=\"list-group\">\r\n                            <Link to={`/transactions/${wallets.id}`}>\r\n                                <li className=\"list-group-item board text-success\">\r\n                                    <i className=\"fa fa-flag-checkered pr-1\"> View Transactions </i>\r\n                                </li>\r\n                            </Link>\r\n                            <Link to={`/updatewallet/${wallets.id}`}>\r\n                                <li className=\"list-group-item update text-info\">\r\n                                    <i className=\"fa fa-edit pr-1\"> Update Account Info</i>\r\n                                </li>\r\n                            </Link>\r\n                            <Link to=\"/dashboard\" onClick={()=>this.deleteBtnClick()}>\r\n                                <li className=\"list-group-item delete text-danger\">\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Account</i>\r\n                                </li>\r\n                            </Link>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{deleteWallets})(DashboardItem)\r\n\r\n","import axios from 'axios'\r\nimport {GET_ERRORS, GET_WALLET, GET_WALLETS,DELETE_WALLETS} from './types'\r\n\r\nexport const createWallet = (newWallet, history) => async dispath => {\r\n    await axios.post('/wallet', newWallet)\r\n        .then((res) => {\r\n            history.push('/dashboard')\r\n        }).catch((err) => {\r\n            dispath({type:GET_ERRORS,payload:err.response.data})\r\n        })\r\n}\r\n\r\nexport const getWallets = () => async dispath => {\r\n    await axios.get('/wallet')\r\n        .then((res) => {\r\n          dispath({type:GET_WALLETS,payload:res.data})\r\n        })\r\n}\r\nexport const getWallet = (id) => async dispath => {\r\n    await axios.get(`/wallet/${id}`)\r\n        .then((res) => {\r\n          dispath({type:GET_WALLET,payload:res.data})\r\n        })\r\n}\r\nexport const updateWallet = (id,updateWallet, history) => async dispath => {\r\n    await axios.put(`/wallet/${id}`, updateWallet)\r\n        .then((res) => {\r\n            history.push('/dashboard')\r\n        }).catch((err) => {\r\n            dispath({type:GET_ERRORS,payload:err.response.data})\r\n        })\r\n}\r\nexport const deleteWallets = (id) => async dispath => {\r\n    await axios.delete(`/wallet/${id}`)\r\n        .then((res) => {\r\n          dispath({type:DELETE_WALLETS,payload:id})\r\n        })\r\n}\r\nexport const createTransaction = (newTransaction, history,walletid) => async dispath => {\r\n    await axios.post(`/transaction/${walletid}`, newTransaction)\r\n        .then((res) => {\r\n            history.push(`/transactions/${walletid}`)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            dispath({type:GET_ERRORS,payload:err.response.data})\r\n        })\r\n}","export const GET_ERRORS = 'GET_ERRORS';\r\n \r\n// Dispatcher for wallets\r\n\r\nexport const GET_WALLETS='GET_WALLETS';\r\n\r\n\r\nexport const GET_WALLET='GET_WALLET';\r\n\r\nexport const DELETE_WALLETS='DELETE_WALLETS';\r\n","import React, { Component } from 'react'\r\nimport DashboardItem from './DashboardItem'\r\nimport { Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getWallets} from '../../actions/projectActions'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super (props)\r\n        this.state=\r\n        {\r\n            totalBalance:0.0\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.wallets)\r\n        {\r\n            let totalBal=0\r\n            for(let wallet in nextProps.wallets)\r\n            {\r\n                totalBal+=wallet.currentBalance\r\n            }\r\n            this.setState({totalBalance:totalBal})\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getWallets()\r\n\r\n    }\r\n\r\n    render() {\r\n        const wallets =this.props.wallets\r\n        const walletsComponeent =wallets.map(wallet=>(<DashboardItem key={wallet.id} wallet={wallet}/>))\r\n        \r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">My Wallets</h1>\r\n                            <br />\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-info btn-lg dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Create new</button>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <Link className=\"dropdown-item\" to=\"/createwallet\">Wallet</Link>\r\n                                    <button disabled className=\"dropdown-item\">Transaction</button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h4>Current Balance (Total)</h4>\r\n                                    <h1>Rs. {this.state.totalBalance}</h1>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n\r\n                \r\n                            {walletsComponeent}\r\n\r\n                            \r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateTOProps=(state) =>({\r\n    wallets:state.wallet.wallets\r\n})\r\n\r\nexport default connect(mapStateTOProps,{getWallets})(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport {createWallet} from '../../../actions/projectActions'\r\nimport {connect} from 'react-redux'\r\n\r\nimport classnames from 'classnames'\r\n//import { queryAllByAttribute } from '@testing-library/react'\r\n\r\nclass CreateWallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            accountNumber: '',\r\n            description: '',\r\n            priority: '',\r\n            errors:''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        const newWallet = {\r\n            name: this.state.name,\r\n            accountNumber: this.state.accountNumber,\r\n            description: this.state.description,\r\n            priority: this.state.priority\r\n        }\r\n       \r\n        this.props.createWallet(newWallet,this.props.history)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create Wallet</h5>\r\n                            <hr />\r\n                            <form onSubmit={(event)=>this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"name\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.name})} placeholder=\"Account Name\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.name}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"accountNumber\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.accountNumber})} placeholder=\"Account No\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.accountNumber}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea onChange={(event) => this.changeHandler(event, \"description\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.description})} placeholder=\"Description\"></textarea>\r\n                                    <p className=\"text-danger\">{this.state.errors.description}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" onChange={(event) => this.changeHandler(event, \"priority\")}>\r\n                                        <option value={3}>Display Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Create\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    errors:state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{createWallet})(CreateWallet)","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n class NoFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"error-template\">\r\n                        <h1>\r\n                            Oops!</h1>\r\n                        <h2>\r\n                            404 Not Found</h2>\r\n                        <div className=\"error-details\">\r\n                            Sorry, an error has occured, Requested page not found!\r\n                        </div>\r\n                        <div className=\"error-actions\">\r\n                            <Link to=\"/\" className=\"btn btn-primary btn-lg\"><span className=\"glyphicon glyphicon-home\"></span>\r\n                                Take Me Home </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoFound\r\n","import {GET_ERRORS} from '../actions/types'\r\n\r\nconst initialState={}\r\nexport default function (state=initialState,action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_WALLET,GET_WALLETS, DELETE_WALLETS} from '../actions/types'\r\n\r\nconst initialState={\r\n    wallets:[],\r\n    wallet:''\r\n}\r\n\r\nexport default function (state=initialState,action){\r\n    switch(action.type)\r\n    {\r\n        case GET_WALLETS:\r\n            return {...state,wallets:action.payload};\r\n        case GET_WALLET:\r\n            return {...state,wallet:action.payload};\r\n        case DELETE_WALLETS:\r\n            return {...state,wallets:state.wallets.filter(x =>x.id!==action.payload)};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport errorReducers from './errorReducers';\r\nimport walletReducer from './walletReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    errors:errorReducers,\r\n    wallet:walletReducer\r\n\r\n    \r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst initialState = {}\r\nconst middleWare = [thunk]\r\nlet store;\r\n\r\n// if (window.navigator.userAgent.includes(\"Chrome\")) {\r\n//     store = createStore(rootReducer,\r\n//         initialState,\r\n//         compose(applyMiddleware(...middleWare),\r\n//             window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n//             window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//         ))\r\n// } else {\r\n    store = createStore(rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleWare)))\r\n// }\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport classnames from 'classnames'\r\nimport {getWallet,updateWallet} from '../../../actions/projectActions'\r\n//import { queryAllByAttribute } from '@testing-library/react'\r\n\r\nclass UpdateWallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            accountNumber: '',\r\n            description: '',\r\n            priority: '',\r\n            currentBalance:'',\r\n            errors:''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n        if(nextProps.wallet)\r\n        {\r\n            this.setState({\r\n                id:nextProps.wallet.id,\r\n                name: nextProps.wallet.name,\r\n                accountNumber: nextProps.wallet.accountNumber,\r\n                description: nextProps.wallet.description,\r\n                currentBalance:nextProps.wallet.currentBalance,\r\n                priority: nextProps.wallet.priority,\r\n            })\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.props.getWallet(this.props.match.params.id)\r\n    }\r\n\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        const updateWallet = {\r\n            id:this.state.id,\r\n            name: this.state.name,\r\n            accountNumber: this.state.accountNumber,\r\n            description: this.state.description,\r\n            currentBalance:this.state.currentBalance,\r\n            priority: this.state.priority\r\n        }\r\n       \r\n     this.props.updateWallet(this.state.id,updateWallet,this.props.history)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Wallet</h5>\r\n                            <hr />\r\n                            <form onSubmit={(event)=>this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.name} onChange={(event) => this.changeHandler(event, \"name\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.name})} placeholder=\"Account Name\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.name}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.accountNumber} onChange={(event) => this.changeHandler(event, \"accountNumber\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.accountNumber})} placeholder=\"Account No\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.accountNumber}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea value={this.state.description} onChange={(event) => this.changeHandler(event, \"description\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.description})} placeholder=\"Description\"></textarea>\r\n                                    <p className=\"text-danger\">{this.state.errors.description}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" value={this.state.priority} onChange={(event) => this.changeHandler(event, \"priority\")}>\r\n                                        <option value={3}>Display Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Update\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    errors:state.errors,\r\n    wallet:state.wallet.wallet\r\n})\r\n\r\nexport default connect(mapStateToProps,{getWallet,updateWallet})(UpdateWallet)","  \r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Transaction extends Component {\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/dashboard\" className=\"btn btn-default btn-lg mb-3\">\r\n                    Back\r\n                </Link>\r\n                <Link to={`/trns/add/${id}`} className=\"btn btn-info btn-lg mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Record new Transaction</i>\r\n                </Link>\r\n                <br />\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-header bg-success text-white\">\r\n                        <h4>UBL Account Balance</h4>\r\n                        <h1>Rs. 27000</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n              \r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Date</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Amount</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr className=\"table-danger\">\r\n                            <td>2020-04-15</td>\r\n                            <td>PTCL Bill</td>\r\n                            <td className=\"text-danger\">-3000</td>\r\n                            <td>\r\n                                <a className=\"text-info\" href=\"updatetransactionForm.html\"><i className=\"fas fa-edit fa-2x\"></i></a>\r\n                                <span className=\"text-danger\"><i className=\"fas fa-trash fa-2x\"></i></span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className=\"table-success\">\r\n                            <td>2020-04-01</td>\r\n                            <td>Income</td>\r\n                            <td className=\"text-success\">+30000</td>\r\n                            <td>\r\n                                <a className=\"text-info\" href=\"updatetransactionForm.html\"><i className=\"fas fa-edit fa-2x\"></i></a>\r\n                                <span className=\"text-danger\"><i className=\"fas fa-trash fa-2x\"></i></span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Transaction","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {createTransaction} from '../../../actions/projectActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddTransaction extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            amount: '',\r\n            description: '',\r\n            type: '1'\r\n        }\r\n    }\r\n\r\n    changeHandler = (event, fieldName, checkbox) => {\r\n        this.setState({\r\n            [fieldName]: checkbox ? event.target.checked : event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        let newTransaction = { \r\n            amount: this.state.amount, \r\n            description: this.state.description, \r\n            type: this.state.type \r\n        }\r\n        this.props.createTransaction(newTransaction,this.props.history,this.props.match.params.id);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n        const { amount, description, type } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/transactions/${id}`} className=\"btn btn-light\">\r\n                                Back to Wallet\r\n                    </Link>\r\n                            <h4 className=\"display-4 text-center\">Record New Transaction</h4>\r\n                            <p className=\"lead text-center\">UBL Account</p>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" min=\"1\" value={amount} onChange={event => this.changeHandler(event, \"amount\", false)} className=\"form-control form-control-lg\" placeholder=\"Amount\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea value={description} onChange={event => this.changeHandler(event, \"description\", false)} className=\"form-control form-control-lg\" placeholder=\"Description\"></textarea>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlTextarea1\">Transaction Type : </label>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input checked={type === '1'} className=\"form-check-input\" type=\"radio\" id=\"income\" onChange={event => this.changeHandler(event, \"type\", false)} value=\"1\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"income\">Income</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input checked={type === '2'} className=\"form-check-input\" type=\"radio\" id=\"expense\" onChange={event => this.changeHandler(event, \"type\", false)} value=\"2\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"expense\">Expense</label>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{createTransaction})(AddTransaction)","import React from 'react';\nimport './App.css';\nimport Nav from './components/shared/nav';\nimport Welcome from './components/Welcome';\nimport Dashboard from './components/dashboard/Dashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport CreateWallet from './components/dashboard/dashboardoperations/CreateWallet';\nimport NotFound from './components/shared/NoFound';\nimport { Provider } from 'react-redux';\nimport store from './Store';\nimport UpdateWallet from './components/dashboard/dashboardoperations/UpdateWallet';\nimport Transaction from './components/transactions/Transaction';\nimport AddTransaction from './components/transactions/transactionoperations/AddTransaction';\nimport 'react-app-polyfill/stable';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/\" component={Nav} />\n        <Switch>\n          <Route path=\"/\" exact component={Welcome} />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/createwallet\" exact component={CreateWallet} />\n          <Route path=\"/updatewallet/:id\" exact component={UpdateWallet} />\n          <Route path=\"/transactions/:id\" exact component={Transaction} />\n          <Route path=\"/trns/add/:id\" exact component={AddTransaction} />\n          \n          <Route path=\"/\" component={NotFound} />\n        </Switch>\n\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}